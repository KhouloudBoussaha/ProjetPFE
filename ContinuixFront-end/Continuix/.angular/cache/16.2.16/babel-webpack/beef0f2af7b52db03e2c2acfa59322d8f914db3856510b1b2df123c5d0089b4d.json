{"ast":null,"code":"import { map } from 'rxjs';\nimport { environment } from 'src/environments/environments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrgChartService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/notification/orgchart`;\n  }\n  getOrgChart() {\n    return this.http.get(this.apiUrl).pipe(map(nodes => this.transformNodes(nodes)));\n  }\n  transformNodes(nodes) {\n    return nodes.map(node => ({\n      ...node,\n      label: node.username,\n      expanded: true,\n      data: {\n        name: node.username,\n        role: node.role\n      },\n      children: node.subordinates ? this.transformNodes(node.subordinates) : []\n    }));\n  }\n  getImageForRole(role) {\n    const images = {\n      ADMIN: 'assets/images/admin.png',\n      MANAGER: 'assets/images/manager.png',\n      TEAM_LEADER: 'assets/images/team-leader.png',\n      EMPLOYEE: 'assets/images/employee.png'\n    };\n    return images[role] || 'assets/images/default.png';\n  }\n  static {\n    this.ɵfac = function OrgChartService_Factory(t) {\n      return new (t || OrgChartService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: OrgChartService,\n      factory: OrgChartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}