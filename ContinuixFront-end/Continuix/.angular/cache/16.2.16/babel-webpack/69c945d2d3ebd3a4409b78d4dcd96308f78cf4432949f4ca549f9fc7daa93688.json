{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UsersService = /*#__PURE__*/(() => {\n  class UsersService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.baseURL = \"http://localhost:8075/api/users\";\n    }\n    getHeaders() {\n      const token = localStorage.getItem('token');\n      return new HttpHeaders({\n        Authorization: `Bearer ${token}`\n      });\n    }\n    getUsersList() {\n      return this.httpClient.get(`${this.baseURL}`);\n    }\n    createUser(employee) {\n      return this.httpClient.post(`${this.baseURL}`, employee);\n    }\n    getUserById(id) {\n      return this.httpClient.get(`${this.baseURL}/${id}`);\n    }\n    updateUser(id, user) {\n      return this.httpClient.put(`${this.baseURL}/${id}`, user);\n    }\n    deleteUser(id) {\n      return this.httpClient.delete(`${this.baseURL}/${id}`);\n    }\n    resetPassword(token, newPassword) {\n      const payload = {\n        token,\n        newPassword\n      };\n      return this.httpClient.post(`${this.baseURL}/reset-password`, payload);\n    }\n    getUsername() {\n      return localStorage.getItem('username');\n    }\n    static {\n      this.ɵfac = function UsersService_Factory(t) {\n        return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: UsersService,\n        factory: UsersService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return UsersService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}