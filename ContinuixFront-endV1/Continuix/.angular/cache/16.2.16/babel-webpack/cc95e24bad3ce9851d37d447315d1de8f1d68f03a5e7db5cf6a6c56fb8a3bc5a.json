{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction ResetPasswordComponent_div_56_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_56_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 8 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_56_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must include letters, numbers, and special characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtemplate(1, ResetPasswordComponent_div_56_div_1_Template, 2, 0, \"div\", 54);\n    i0.ɵɵtemplate(2, ResetPasswordComponent_div_56_div_2_Template, 2, 0, \"div\", 54);\n    i0.ɵɵtemplate(3, ResetPasswordComponent_div_56_div_3_Template, 2, 0, \"div\", 54);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.resetForm.get(\"newPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.resetForm.get(\"newPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r0.resetForm.get(\"newPassword\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"pattern\"]);\n  }\n}\nfunction ResetPasswordComponent_div_61_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_61_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtemplate(1, ResetPasswordComponent_div_61_div_1_Template, 2, 0, \"div\", 54);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.resetForm.get(\"confirmPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction ResetPasswordComponent_div_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtext(1, \" Passwords do not match. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_span_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 55);\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_span_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 56);\n    i0.ɵɵtext(1, \" Please wait... \");\n    i0.ɵɵelement(2, \"span\", 57);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_67_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 58);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.successMessage);\n  }\n}\nfunction ResetPasswordComponent_div_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 59);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.errorMessage);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"bg-active-success\": a0\n  };\n};\nexport let ResetPasswordComponent = /*#__PURE__*/(() => {\n  class ResetPasswordComponent {\n    constructor(route, http, fb, router) {\n      this.route = route;\n      this.http = http;\n      this.fb = fb;\n      this.router = router;\n      this.token = null;\n      this.errorMessage = null;\n      this.successMessage = null;\n      this.showPassword = false; // Pour toggler l'affichage du mot de passe\n      this.isSubmitting = false; // Pour l'indicateur de chargement\n      this.resetForm = this.fb.group({\n        newPassword: ['', [Validators.required, Validators.minLength(8), Validators.pattern(/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]],\n        confirmPassword: ['', [Validators.required]]\n      }, {\n        validators: this.passwordMatchValidator\n      });\n    }\n    // Validateur pour vérifier que les mots de passe correspondent\n    passwordMatchValidator(form) {\n      return form.get('newPassword')?.value === form.get('confirmPassword')?.value ? null : {\n        mismatch: true\n      };\n    }\n    ngOnInit() {\n      this.token = this.route.snapshot.queryParamMap.get('token');\n      if (!this.token) {\n        this.errorMessage = 'Invalid or missing token. Please check the link.';\n      }\n    }\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    }\n    onSubmit() {\n      console.log('🚀 Submit triggered');\n      console.log('✅ Form valid?', this.resetForm.valid);\n      console.log('✅ Token?', this.token);\n      console.log('✅ isSubmitting?', this.isSubmitting);\n      if (this.resetForm.valid && this.token) {\n        this.isSubmitting = true;\n        const resetRequest = {\n          token: this.token,\n          newPassword: this.resetForm.value.newPassword\n        };\n        console.log('🔐 Token envoyé :', this.token);\n        console.log('📦 Payload envoyé :', resetRequest);\n        this.http.post('http://localhost:8075/api/users/reset-password', resetRequest).subscribe({\n          next: response => {\n            console.log('✅ Réponse du backend:', response);\n            this.successMessage = response?.message || 'Mot de passe réinitialisé avec succès.';\n            this.errorMessage = null;\n            this.isSubmitting = false;\n            this.router.navigate(['/login']); // ou laisse-le temporairement si pas encore dispo\n          }\n        });\n      } else if (!this.token) {\n        this.errorMessage = 'Invalid or missing token. Please check the link.';\n      }\n    }\n    // Calculer la force du mot de passe pour l'indicateur\n    getPasswordStrength() {\n      const password = this.resetForm.get('newPassword')?.value || '';\n      let strength = 0;\n      if (password.length >= 8) strength++;\n      if (/[A-Za-z]/.test(password)) strength++;\n      if (/\\d/.test(password)) strength++;\n      if (/[@$!%*?&]/.test(password)) strength++;\n      return strength;\n    }\n    static {\n      this.ɵfac = function ResetPasswordComponent_Factory(t) {\n        return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i1.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ResetPasswordComponent,\n        selectors: [[\"app-reset-password\"]],\n        decls: 70,\n        vars: 24,\n        consts: [[\"lang\", \"en\"], [\"http-equiv\", \"content-type\", \"content\", \"text/html;charset=UTF-8\"], [\"charset\", \"utf-8\"], [\"name\", \"description\", \"content\", \"Good admin dashboard live demo. Check out all the features of the admin panel. A large number of settings, additional services and widgets.\"], [\"name\", \"keywords\", \"content\", \"Good, bootstrap, bootstrap 5, admin themes, Asp.Net Core & Django starter kits, admin themes, bootstrap admin, bootstrap dashboard, bootstrap dark mode\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1\"], [\"property\", \"og:locale\", \"content\", \"en_US\"], [\"property\", \"og:type\", \"content\", \"article\"], [\"property\", \"og:title\", \"content\", \"Good \\u2013 Bootstrap 5 HTML Asp.Net Core, Blazor, Django & Flask Admin Dashboard Template by KeenThemes\"], [\"property\", \"og:url\", \"content\", \"https://themes.getbootstrap.com/product/good-bootstrap-5-admin-dashboard-template\"], [\"property\", \"og:site_name\", \"content\", \"Good by Keenthemes\"], [\"rel\", \"canonical\", \"href\", \"basic.html\"], [\"rel\", \"shortcut icon\", \"href\", \"../../assets/media/logos/favicon.ico\"], [\"rel\", \"stylesheet\", \"href\", \"https://fonts.googleapis.com/css?family=Inter:300,400,500,600,700\"], [\"id\", \"kt_body\", 1, \"app-blank\"], [\"id\", \"kt_app_root\", 1, \"d-flex\", \"flex-column\", \"flex-root\"], [1, \"d-flex\", \"flex-column\", \"flex-lg-row\", \"flex-column-fluid\"], [1, \"d-flex\", \"flex-column\", \"flex-lg-row-auto\", \"bg-primary\", \"w-xl-600px\", \"positon-xl-relative\"], [1, \"d-flex\", \"flex-column\", \"position-xl-fixed\", \"top-0\", \"bottom-0\", \"w-xl-600px\", \"scroll-y\"], [1, \"d-flex\", \"flex-row-fluid\", \"flex-center\", \"flex-column\", \"text-center\", \"p-5\", \"p-lg-20\"], [\"href\", \"../../index.html\", 1, \"py-9\", \"pt-lg-20\"], [\"alt\", \"Logo\", \"src\", \"assets\\\\images\\\\images-Photoroom.png\", 1, \"h-100px\", \"h-lg-110px\"], [1, \"d-none\", \"d-lg-block\", \"fw-bold\", \"text-white\", \"fs-2qx\", \"pb-5\", \"pb-md-10\"], [1, \"d-none\", \"d-lg-flex\", \"flex-row-auto\", \"bgi-no-repeat\", \"bgi-position-x-center\", \"bgi-size-contain\", \"bgi-position-y-bottom\", \"min-h-200px\", \"min-h-lg-350px\", \"mb-20\", 2, \"background-image\", \"url()\"], [1, \"d-flex\", \"flex-column\", \"flex-lg-row-fluid\", \"py-10\"], [1, \"d-flex\", \"flex-center\", \"flex-column\", \"flex-column-fluid\"], [1, \"w-lg-500px\", \"p-10\", \"p-lg-15\", \"mx-auto\"], [\"id\", \"kt_new_password_form\", \"novalidate\", \"novalidate\", 1, \"form\", \"w-100\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"mb-10\"], [1, \"text-gray-900\", \"mb-3\"], [1, \"text-gray-500\", \"fw-semibold\", \"fs-4\"], [\"routerLink\", \"/login\", 1, \"link-primary\", \"fw-bold\"], [1, \"mb-10\", \"fv-row\"], [1, \"mb-1\"], [1, \"form-label\", \"fw-bold\", \"text-gray-900\", \"fs-6\"], [1, \"position-relative\", \"mb-3\"], [\"formControlName\", \"newPassword\", \"placeholder\", \"\", \"autocomplete\", \"off\", 1, \"form-control\", \"form-control-lg\", \"form-control-solid\", 3, \"type\"], [\"data-kt-password-meter-control\", \"visibility\", 1, \"btn\", \"btn-sm\", \"btn-icon\", \"position-absolute\", \"translate-middle\", \"top-50\", \"end-0\", \"me-n2\", 3, \"click\"], [1, \"bi\", 3, \"ngClass\"], [\"data-kt-password-meter-control\", \"highlight\", 1, \"d-flex\", \"align-items-center\", \"mb-3\"], [1, \"flex-grow-1\", \"bg-secondary\", \"rounded\", \"h-5px\", \"me-2\", 3, \"ngClass\"], [1, \"flex-grow-1\", \"bg-secondary\", \"rounded\", \"h-5px\", 3, \"ngClass\"], [1, \"text-muted\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"fv-row\", \"mb-10\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", \"placeholder\", \"\", \"autocomplete\", \"off\", 1, \"form-control\", \"form-control-lg\", \"form-control-solid\"], [1, \"text-center\"], [\"type\", \"submit\", \"id\", \"kt_new_password_submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"fw-bold\", 3, \"disabled\"], [\"class\", \"indicator-label\", 4, \"ngIf\"], [\"class\", \"indicator-progress\", 4, \"ngIf\"], [\"class\", \"alert alert-success mt-4\", 4, \"ngIf\"], [\"class\", \"alert alert-danger mt-4\", 4, \"ngIf\"], [1, \"d-flex\", \"flex-center\", \"flex-wrap\", \"fs-6\", \"p-5\", \"pb-0\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [1, \"indicator-label\"], [1, \"indicator-progress\"], [1, \"spinner-border\", \"spinner-border-sm\", \"align-middle\", \"ms-2\"], [1, \"alert\", \"alert-success\", \"mt-4\"], [1, \"alert\", \"alert-danger\", \"mt-4\"]],\n        template: function ResetPasswordComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"html\", 0);\n            i0.ɵɵelement(1, \"meta\", 1);\n            i0.ɵɵelementStart(2, \"head\")(3, \"title\");\n            i0.ɵɵtext(4, \"Good \\u2013 Bootstrap 5 HTML Asp.Net Core, Blazor, Django \");\n            i0.ɵɵtext(5, \"&\");\n            i0.ɵɵtext(6, \" Flask Admin Dashboard Template by KeenThemes\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"meta\", 2)(8, \"meta\", 3)(9, \"meta\", 4)(10, \"meta\", 5)(11, \"meta\", 6)(12, \"meta\", 7)(13, \"meta\", 8)(14, \"meta\", 9)(15, \"meta\", 10)(16, \"link\", 11)(17, \"link\", 12)(18, \"link\", 13);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"body\", 14)(20, \"div\", 15)(21, \"div\", 16)(22, \"div\", 17)(23, \"div\", 18)(24, \"div\", 19)(25, \"a\", 20);\n            i0.ɵɵelement(26, \"img\", 21);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(27, \"h1\", 22);\n            i0.ɵɵtext(28, \" Welcome to SopraPCA \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelement(29, \"div\", 23);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(30, \"div\", 24)(31, \"div\", 25)(32, \"div\", 26)(33, \"form\", 27);\n            i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_Template_form_ngSubmit_33_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(34, \"div\", 28)(35, \"h1\", 29);\n            i0.ɵɵtext(36, \"Set My Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(37, \"div\", 30);\n            i0.ɵɵtext(38, \" Already have Set Your Password ? \");\n            i0.ɵɵelementStart(39, \"a\", 31);\n            i0.ɵɵtext(40, \"Sign in here\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(41, \"div\", 32)(42, \"div\", 33)(43, \"label\", 34);\n            i0.ɵɵtext(44, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(45, \"div\", 35);\n            i0.ɵɵelement(46, \"input\", 36);\n            i0.ɵɵelementStart(47, \"span\", 37);\n            i0.ɵɵlistener(\"click\", function ResetPasswordComponent_Template_span_click_47_listener() {\n              return ctx.togglePasswordVisibility();\n            });\n            i0.ɵɵelement(48, \"i\", 38);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(49, \"div\", 39);\n            i0.ɵɵelement(50, \"div\", 40)(51, \"div\", 40)(52, \"div\", 40)(53, \"div\", 41);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(54, \"div\", 42);\n            i0.ɵɵtext(55, \" Use 8 or more characters with a mix of letters, numbers & symbols. \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(56, ResetPasswordComponent_div_56_Template, 4, 3, \"div\", 43);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(57, \"div\", 44)(58, \"label\", 34);\n            i0.ɵɵtext(59, \"Confirm Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(60, \"input\", 45);\n            i0.ɵɵtemplate(61, ResetPasswordComponent_div_61_Template, 2, 1, \"div\", 43);\n            i0.ɵɵtemplate(62, ResetPasswordComponent_div_62_Template, 2, 0, \"div\", 43);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(63, \"div\", 46)(64, \"button\", 47);\n            i0.ɵɵtemplate(65, ResetPasswordComponent_span_65_Template, 2, 0, \"span\", 48);\n            i0.ɵɵtemplate(66, ResetPasswordComponent_span_66_Template, 3, 0, \"span\", 49);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(67, ResetPasswordComponent_div_67_Template, 2, 1, \"div\", 50);\n            i0.ɵɵtemplate(68, ResetPasswordComponent_div_68_Template, 2, 1, \"div\", 51);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelement(69, \"div\", 52);\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            let tmp_8_0;\n            let tmp_9_0;\n            let tmp_10_0;\n            i0.ɵɵadvance(33);\n            i0.ɵɵproperty(\"formGroup\", ctx.resetForm);\n            i0.ɵɵadvance(8);\n            i0.ɵɵattribute(\"data-kt-password-meter\", true);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngClass\", ctx.showPassword ? \"bi-eye\" : \"bi-eye-slash\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx.getPasswordStrength() >= 1));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, ctx.getPasswordStrength() >= 2));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, ctx.getPasswordStrength() >= 3));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c0, ctx.getPasswordStrength() >= 4));\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_8_0 = ctx.resetForm.get(\"newPassword\")) == null ? null : tmp_8_0.touched) && ((tmp_8_0 = ctx.resetForm.get(\"newPassword\")) == null ? null : tmp_8_0.invalid));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_9_0 = ctx.resetForm.get(\"confirmPassword\")) == null ? null : tmp_9_0.touched) && ((tmp_9_0 = ctx.resetForm.get(\"confirmPassword\")) == null ? null : tmp_9_0.invalid));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.resetForm.hasError(\"mismatch\") && ((tmp_10_0 = ctx.resetForm.get(\"confirmPassword\")) == null ? null : tmp_10_0.touched));\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.resetForm.invalid || ctx.isSubmitting || !ctx.token);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isSubmitting);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isSubmitting);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          }\n        },\n        dependencies: [i4.NgClass, i4.NgIf, i1.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName]\n      });\n    }\n  }\n  return ResetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}