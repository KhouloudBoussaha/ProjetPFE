{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_23_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_23_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Enter a valid email.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, LoginComponent_div_23_div_1_Template, 2, 0, \"div\", 30);\n    i0.ɵɵtemplate(2, LoginComponent_div_23_div_2_Template, 2, 0, \"div\", 30);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction LoginComponent_div_31_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, LoginComponent_div_31_div_1_Template, 2, 0, \"div\", 30);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction LoginComponent_span_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 31);\n    i0.ɵɵtext(1, \" Please wait... \");\n    i0.ɵɵelement(2, \"span\", 32);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(authService, router, route, fb) {\n    this.authService = authService;\n    this.router = router;\n    this.route = route;\n    this.fb = fb;\n    this.loading = false;\n    this.errorMessage = null;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.invalid) {\n      this.loginForm.markAllAsTouched();\n      return;\n    }\n    this.authService.clearAuthData();\n    this.loading = true;\n    this.errorMessage = null;\n    const credentials = this.loginForm.value;\n    this.authService.login(credentials).subscribe({\n      next: response => {\n        this.loading = false;\n        // 🔁 Gérer la redirection dynamique\n        const redirectUrl = this.route.snapshot.queryParamMap.get('redirect');\n        if (redirectUrl) {\n          // S'assurer que redirectUrl est valide et remplacer :id si nécessaire\n          // Supposons que notificationId est passé dans l'URL de redirection ou comme paramètre de requête\n          const notificationId = this.route.snapshot.queryParamMap.get('notificationId') || 'default-id'; // Ajustez selon la manière dont notificationId est passé\n          const resolvedUrl = redirectUrl.replace(':id', notificationId);\n          this.router.navigateByUrl(resolvedUrl);\n        } else {\n          // ✅ Revenir à la redirection basée sur le rôle\n          switch (response.role) {\n            case 'Admin':\n              this.router.navigate(['/dashboard']);\n              break;\n            case 'SECURITYAGENT':\n              this.router.navigate(['/dashboardCommun']);\n              break;\n            case 'MANAGER':\n              this.router.navigate(['/dashboardCommun']);\n              break;\n            case 'COLLABORATOR':\n              this.router.navigate(['/dashboardCommun']);\n              break;\n            default:\n              this.router.navigate(['/']);\n          }\n        }\n      },\n      error: error => {\n        this.loading = false;\n        this.errorMessage = error.message || 'Une erreur est survenue lors de la connexion.';\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 37,\n      vars: 11,\n      consts: [[\"id\", \"kt_body\", 1, \"app-blank\"], [\"id\", \"kt_app_root\", 1, \"d-flex\", \"flex-column\", \"flex-root\"], [1, \"d-flex\", \"flex-column\", \"flex-lg-row\", \"flex-column-fluid\"], [1, \"d-flex\", \"flex-column\", \"flex-lg-row-auto\", \"bg-primary\", \"w-xl-600px\", \"positon-xl-relative\"], [1, \"d-flex\", \"flex-column\", \"position-xl-fixed\", \"top-0\", \"bottom-0\", \"w-xl-600px\", \"scroll-y\"], [1, \"d-flex\", \"flex-row-fluid\", \"flex-center\", \"flex-column\", \"text-center\", \"p-5\", \"p-lg-20\"], [\"href\", \"../../index.html\", 1, \"py-9\", \"pt-lg-20\"], [\"alt\", \"Logo\", \"src\", \"assets\\\\images\\\\images-Photoroom.png\", 1, \"h-100px\", \"h-lg-110px\"], [1, \"d-none\", \"d-lg-block\", \"fw-bold\", \"text-white\", \"fs-2qx\", \"pb-5\", \"pb-md-10\"], [1, \"d-none\", \"d-lg-flex\", \"flex-row-auto\", \"bgi-no-repeat\", \"bgi-position-x-center\", \"bgi-size-contain\", \"bgi-position-y-bottom\", \"min-h-200px\", \"min-h-lg-350px\", \"mb-20\", 2, \"background-image\", \"url()\"], [1, \"d-flex\", \"flex-column\", \"flex-lg-row-fluid\", \"py-10\"], [1, \"d-flex\", \"flex-center\", \"flex-column\", \"flex-column-fluid\"], [1, \"w-lg-500px\", \"p-10\", \"p-lg-15\", \"mx-auto\"], [\"novalidate\", \"\", \"id\", \"kt_sign_in_form\", 1, \"form\", \"w-100\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"mb-10\"], [1, \"text-gray-900\", \"mb-3\"], [1, \"text-gray-500\", \"fw-semibold\", \"fs-4\"], [1, \"fv-row\", \"mb-10\"], [1, \"form-label\", \"fs-6\", \"fw-bold\", \"text-gray-900\"], [\"type\", \"email\", \"formControlName\", \"email\", \"autocomplete\", \"off\", 1, \"form-control\", \"form-control-lg\", \"form-control-solid\", 3, \"ngClass\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"d-flex\", \"flex-stack\", \"mb-2\"], [1, \"form-label\", \"fw-bold\", \"text-gray-900\", \"fs-6\", \"mb-0\"], [\"routerLink\", \"/reset-password\", 1, \"link-primary\", \"fs-6\", \"fw-bold\"], [\"type\", \"password\", \"formControlName\", \"password\", \"autocomplete\", \"off\", 1, \"form-control\", \"form-control-lg\", \"form-control-solid\", 3, \"ngClass\"], [1, \"text-center\"], [\"type\", \"submit\", \"id\", \"kt_sign_in_submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"w-100\", \"mb-5\", 3, \"disabled\"], [1, \"indicator-label\"], [\"class\", \"indicator-progress\", 4, \"ngIf\"], [1, \"text-danger\"], [4, \"ngIf\"], [1, \"indicator-progress\"], [1, \"spinner-border\", \"spinner-border-sm\", \"align-middle\", \"ms-2\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"body\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"a\", 6);\n          i0.ɵɵelement(7, \"img\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"h1\", 8);\n          i0.ɵɵtext(9, \" Welcome to SopraPCA \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(10, \"div\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 10)(12, \"div\", 11)(13, \"div\", 12)(14, \"form\", 13);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_14_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(15, \"div\", 14)(16, \"h1\", 15);\n          i0.ɵɵtext(17, \"Sign In to Continuix\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"div\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 17)(20, \"label\", 18);\n          i0.ɵɵtext(21, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"input\", 19);\n          i0.ɵɵtemplate(23, LoginComponent_div_23_Template, 3, 2, \"div\", 20);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"div\", 17)(25, \"div\", 21)(26, \"label\", 22);\n          i0.ɵɵtext(27, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"a\", 23);\n          i0.ɵɵtext(29, \"Forgot Password?\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(30, \"input\", 24);\n          i0.ɵɵtemplate(31, LoginComponent_div_31_Template, 2, 1, \"div\", 20);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"div\", 25)(33, \"button\", 26)(34, \"span\", 27);\n          i0.ɵɵtext(35, \"Continue\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(36, LoginComponent_span_36_Template, 3, 0, \"span\", 28);\n          i0.ɵɵelementEnd()()()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.invalid)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.touched) && ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.invalid));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.touched) && ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.invalid)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.touched) && ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.invalid));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid || ctx.loading);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName]\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}