{"ast":null,"code":"import { IncidentType } from '../incident-type';\nimport { Impact } from '../impact';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../notification.service\";\nimport * as i3 from \"../ai.service\";\nimport * as i4 from \"../auth.service\";\nimport * as i5 from \"@angular/common\";\nfunction NotificationConsultComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Chargement...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NotificationConsultComponent_div_1_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 15);\n    i0.ɵɵtext(2, \" \\u2705 Accepted \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NotificationConsultComponent_div_1_ng_template_38_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function NotificationConsultComponent_div_1_ng_template_38_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.onAcknowledge());\n    });\n    i0.ɵɵtext(1, \" Acknowledge Notification \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r4.notification || !ctx_r4.notification.id);\n  }\n}\nfunction NotificationConsultComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"h2\", 4);\n    i0.ɵɵtext(3, \" \\uD83D\\uDD14 Notification Overview \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 5);\n    i0.ɵɵtext(5, \"Please review the following incident details.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 6)(7, \"h4\", 7);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 8)(10, \"div\", 9)(11, \"div\")(12, \"strong\");\n    i0.ɵɵtext(13, \"\\uD83D\\uDEE0 Incident Type:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 10);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 9)(17, \"div\")(18, \"strong\");\n    i0.ɵɵtext(19, \"\\uD83D\\uDCCA Impact Level:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 10);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 11)(23, \"div\")(24, \"strong\");\n    i0.ɵɵtext(25, \"\\uD83D\\uDCAC Message:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"div\", 10);\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(28, \"div\", 11)(29, \"div\")(30, \"strong\");\n    i0.ɵɵtext(31, \"\\uD83D\\uDCC5 Created On:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 10);\n    i0.ɵɵtext(33);\n    i0.ɵɵpipe(34, \"date\");\n    i0.ɵɵpipe(35, \"date\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(36, \"div\", 12);\n    i0.ɵɵtemplate(37, NotificationConsultComponent_div_1_div_37_Template, 3, 0, \"div\", 13);\n    i0.ɵɵtemplate(38, NotificationConsultComponent_div_1_ng_template_38_Template, 2, 1, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(39);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r1.notification.title);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r1.notification.incidentType);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r1.notification.impact);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r1.notification.message);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(34, 8, ctx_r1.notification.createdAt, \"fullDate\"), \" at \", i0.ɵɵpipeBind2(35, 11, ctx_r1.notification.createdAt, \"shortTime\"), \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.notification == null ? null : ctx_r1.notification.accepted)(\"ngIfElse\", _r3);\n  }\n}\nexport class NotificationConsultComponent {\n  constructor(route, notificationService, aiservice, authService, router) {\n    this.route = route;\n    this.notificationService = notificationService;\n    this.aiservice = aiservice;\n    this.authService = authService;\n    this.router = router;\n    this.notification = null;\n    this.loading = true;\n    this.message = null;\n    this.isAcknowledgeRoute = false;\n    this.acknowledgeSuccess = false;\n    this.acknowledgeError = null;\n  }\n  ngOnInit() {\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigate(['/login'], {\n        queryParams: {\n          redirect: this.router.url\n        }\n      });\n      return;\n    }\n    this.loading = true;\n    const id = +this.route.snapshot.params['id'];\n    if (!id || isNaN(id)) {\n      this.message = \"ID de notification invalide.\";\n      this.loading = false;\n      return;\n    }\n    this.notificationService.getNotificationById(id).subscribe({\n      next: data => {\n        this.notification = data;\n        this.loading = false;\n      },\n      error: err => {\n        console.error('Erreur lors de la récupération de la notification :', err);\n        this.message = 'Erreur lors du chargement de la notification.';\n        this.loading = false;\n      }\n    });\n  }\n  onAcknowledge() {\n    if (!this.notification || !this.notification.id) {\n      console.error('Notification est null ou id manquant, impossible de faire acknowledge.');\n      return; // Stop l'exécution si notification invalide\n    }\n\n    this.notificationService.acknowledgeNotification(this.notification.id).subscribe({\n      next: () => {\n        if (this.notification) {\n          this.notification.accepted = true;\n          this.acknowledgeSuccess = true;\n          this.acknowledgeError = null;\n          this.message = 'Accusé de réception enregistré avec succès.';\n        }\n      },\n      error: err => {\n        this.acknowledgeSuccess = false;\n        this.acknowledgeError = err.status === 409 ? 'Notification déjà accusée.' : err.status === 404 ? 'Notification ou utilisateur non trouvé.' : 'Erreur lors de l\\'accusé de réception.';\n        this.message = this.acknowledgeError;\n      }\n    });\n  }\n  predict(notification) {\n    const dto = {\n      incident_type_encoded: this.encodeIncidentType(notification.incidentType),\n      impact_encoded: this.encodeImpact(notification.impact)\n    };\n    this.aiservice.predictPca(dto).subscribe({\n      next: res => this.selectedPCA = res,\n      error: () => alert('Erreur de prédiction PCA')\n    });\n  }\n  closeModal() {\n    this.selectedPCA = undefined;\n  }\n  encodeIncidentType(type) {\n    switch (type) {\n      case IncidentType.AUTHENTICATION_ISSUE:\n        return 1;\n      case IncidentType.NETWORK_ISSUE:\n        return 2;\n      case IncidentType.SYSTEM_ERROR:\n        return 3;\n      case IncidentType.USER_REQUEST:\n        return 4;\n      case IncidentType.NATURAL_INCIDENT:\n        return 5;\n      case IncidentType.DEVELOPMENT_ENVIRONMENT:\n        return 6;\n      case IncidentType.OTHER_IT_INCIDENT:\n        return 7;\n      case IncidentType.UNKNOWN:\n        return 8;\n      default:\n        return 0;\n    }\n  }\n  encodeImpact(impact) {\n    switch (impact) {\n      case Impact.LOW:\n        return 1;\n      case Impact.MEDIUM:\n        return 2;\n      case Impact.HIGH:\n        return 3;\n      default:\n        return 0;\n    }\n  }\n  static {\n    this.ɵfac = function NotificationConsultComponent_Factory(t) {\n      return new (t || NotificationConsultComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.AiService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i1.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NotificationConsultComponent,\n      selectors: [[\"app-notification-consult\"]],\n      decls: 2,\n      vars: 2,\n      consts: [[4, \"ngIf\"], [\"class\", \"card shadow border-0 rounded-4 bg-white mx-auto p-5\", \"style\", \"max-width: 850px; font-family: 'Segoe UI', sans-serif;\", 4, \"ngIf\"], [1, \"card\", \"shadow\", \"border-0\", \"rounded-4\", \"bg-white\", \"mx-auto\", \"p-5\", 2, \"max-width\", \"850px\", \"font-family\", \"'Segoe UI', sans-serif\"], [1, \"mb-4\", \"border-bottom\", \"pb-3\"], [1, \"text-dark\", \"fw-semibold\", \"mb-1\"], [1, \"text-muted\", \"mb-0\"], [1, \"mb-4\"], [1, \"text-primary\", \"fw-bold\"], [1, \"row\", \"gy-3\"], [1, \"col-md-6\"], [1, \"text-muted\"], [1, \"col-12\"], [1, \"mt-5\", \"text-center\"], [4, \"ngIf\", \"ngIfElse\"], [\"notAccepted\", \"\"], [1, \"badge\", \"bg-success\", \"px-4\", \"py-2\", \"fs-6\"], [1, \"btn\", \"btn-outline-primary\", \"btn-lg\", \"px-4\", 3, \"disabled\", \"click\"]],\n      template: function NotificationConsultComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NotificationConsultComponent_div_0_Template, 2, 0, \"div\", 0);\n          i0.ɵɵtemplate(1, NotificationConsultComponent_div_1_Template, 40, 14, \"div\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.notification && !ctx.loading);\n        }\n      },\n      dependencies: [i5.NgIf, i5.DatePipe],\n      styles: [\"[_nghost-%COMP%] {\\n  display: block;\\n  max-width: 600px;\\n  margin: 2rem auto;\\n  padding: 1.5rem;\\n  border-radius: 1rem;\\n  background-color: #ebebeb;\\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\\n  font-family: 'Segoe UI', sans-serif;\\n}\\n.dashboard-wrapper[_ngcontent-%COMP%] {   \\n position: absolute;\\n top: 0; \\n left: 0px;\\n  background-color: rgba(255, 255, 255, 0.9); \\n\\n  padding: 2rem;\\n  border-radius: 0px;\\n  width: 100%;           \\n\\n  max-width: none;  \\n    overflow-y: auto;\\n  margin-left: 0px; \\n\\n}\\n\\n\\nh2[_ngcontent-%COMP%] {\\n  font-size: 1.5rem;\\n  margin-bottom: 1rem;\\n  color: #333;\\n}\\n\\np[_ngcontent-%COMP%] {\\n  margin: 0.5rem 0;\\n  color: #555;\\n}\\n\\n.text-success[_ngcontent-%COMP%] {\\n  color: #28a745;\\n  font-weight: bold;\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  margin-top: 1rem;\\n  padding: 0.6rem 1.2rem;\\n  border: none;\\n  border-radius: 0.5rem;\\n  font-size: 1rem;\\n  cursor: pointer;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%] {\\n  background-color: #007bff;\\n  color: white;\\n  transition: background-color 0.3s ease;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n\\n[ngIf=\\\"loading\\\"][_ngcontent-%COMP%] {\\n  font-style: italic;\\n  color: #888;\\n  text-align: center;\\n  padding: 1rem;\\n}\"]\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}