{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../org-chart.service\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"primeng/api\";\nfunction AdminDashboardComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r4 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Niveau \", i_r4 + 1, \" \");\n  }\n}\nfunction AdminDashboardComponent_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Chargement des donn\\u00E9es...\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nfunction AdminDashboardComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 10);\n    i0.ɵɵelement(2, \"img\", 11);\n    i0.ɵɵelementStart(3, \"span\", 12);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const node_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, (node_r5.data == null ? null : node_r5.data.accepted) ? \"lightgreen\" : \"lightcoral\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", (node_r5.data == null ? null : node_r5.data.image) || \"assets/placeholder-image.png\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((node_r5.data == null ? null : node_r5.data.name) || node_r5.label);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((node_r5.data == null ? null : node_r5.data.role) || node_r5.role);\n  }\n}\nconst _c1 = function () {\n  return [];\n};\nexport class AdminDashboardComponent {\n  constructor(orgChartService, authService) {\n    this.orgChartService = orgChartService;\n    this.authService = authService;\n    this.orgChart = [];\n    this.maxLevels = 0;\n  }\n  ngOnInit() {\n    this.orgChartService.getOrgChart().subscribe({\n      next: data => {\n        console.log('Structure des données orgChart :', JSON.stringify(data, null, 2));\n        this.validateOrgChartData(data);\n        this.orgChart = data;\n        this.maxLevels = this.calculateMaxLevels(data); // Calculer le nombre de niveaux\n      },\n\n      error: err => {\n        console.error('Erreur API :', err);\n      }\n    });\n  }\n  // Calculer la profondeur maximale de l'organigramme\n  calculateMaxLevels(nodes, currentLevel = 1) {\n    let max = currentLevel;\n    nodes.forEach(node => {\n      if (node.children && node.children.length > 0) {\n        const childMax = this.calculateMaxLevels(node.children, currentLevel + 1);\n        max = Math.max(max, childMax);\n      }\n    });\n    return max;\n  }\n  // Valider la structure des données\n  validateOrgChartData(data) {\n    data.forEach((node, index) => {\n      console.log(`Nœud ${index + 1}:`, {\n        label: node.label,\n        name: node.data?.name,\n        role: node.data?.role,\n        accepted: node.data?.accepted,\n        image: node.data?.image || 'N/A',\n        childrenCount: node.children ? node.children.length : 0\n      });\n      if (node.children && node.children.length > 0) {\n        console.log(`Enfants du nœud ${node.label}:`, node.children);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function AdminDashboardComponent_Factory(t) {\n      return new (t || AdminDashboardComponent)(i0.ɵɵdirectiveInject(i1.OrgChartService), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdminDashboardComponent,\n      selectors: [[\"app-admin-dashboard\"]],\n      decls: 9,\n      vars: 5,\n      consts: [[1, \"organigramme-layout\"], [1, \"levels-column\"], [\"class\", \"level-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"organigramme-column\"], [1, \"organigram-title\"], [4, \"ngIf\"], [\"selectionMode\", \"single\", 3, \"value\", \"collapsible\"], [\"pTemplate\", \"person\"], [1, \"level-item\"], [1, \"node\", 3, \"ngStyle\"], [1, \"flex\", \"flex-col\", \"items-center\"], [\"alt\", \"Profile\", 1, \"mb-4\", \"w-12\", \"h-12\", \"rounded-full\", 3, \"src\"], [1, \"font-bold\", \"mb-2\"]],\n      template: function AdminDashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtemplate(2, AdminDashboardComponent_div_2_Template, 2, 1, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"h2\", 4);\n          i0.ɵɵtext(5, \"Accept/Reject Overview\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, AdminDashboardComponent_p_6_Template, 2, 0, \"p\", 5);\n          i0.ɵɵelementStart(7, \"p-organization-chart\", 6);\n          i0.ɵɵtemplate(8, AdminDashboardComponent_ng_template_8_Template, 7, 6, \"ng-template\", 7);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(4, _c1).constructor(ctx.maxLevels));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.orgChart.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"value\", ctx.orgChart)(\"collapsible\", true);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i3.NgStyle, i4.PrimeTemplate],\n      styles: [\"\\n\\n.organigramme-layout[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 100px 1fr; \\n\\n  background-color: #ffffff;\\n  padding: 1rem;\\n  border-radius: 12px;\\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);\\n  width: 90%;\\n  margin: 2rem auto;\\n  max-height: 500px;\\n  overflow-y: auto;\\n  color: #333;\\n}\\n\\n\\n\\n.levels-column[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around;\\n  align-items: flex-end;\\n  padding-right: 10px;\\n}\\n\\n\\n\\n.level-item[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  font-size: 1rem;\\n  color: #555;\\n  padding: 10px 0;\\n}\\n\\n\\n\\n.organigramme-column[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding-left: 20px;\\n}\\n\\n\\n\\n.organigram-title[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 1.5rem;\\n  font-weight: bold;\\n  margin-bottom: 20px;\\n  color: #333;\\n}\\n\\n\\n\\n.node[_ngcontent-%COMP%] {\\n  padding: 12px;\\n  border-radius: 8px;\\n  text-align: center;\\n  min-width: 140px;\\n  background-color: white;\\n  font-size: 0.9rem;\\n  border: 2px solid #ccc;\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\\n  transition: transform 0.2s;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n}\\n\\n.node[_ngcontent-%COMP%]:hover {\\n  transform: scale(1.05);\\n}\\n\\n.node[style*=\\\"lightgreen\\\"][_ngcontent-%COMP%] {\\n  border-color: green;\\n}\\n\\n.node[style*=\\\"lightcoral\\\"][_ngcontent-%COMP%] {\\n  border-color: red;\\n}\\n\\n\\n\\np-organizationChart[_ngcontent-%COMP%]   .p-organizationchart-node-content[_ngcontent-%COMP%] {\\n  background: transparent !important;\\n  border: none !important;\\n  box-shadow: none !important;\\n}\\n\\np-organizationChart[_ngcontent-%COMP%]   .p-organizationchart-node-content[_ngcontent-%COMP%]:hover {\\n  box-shadow: none !important;\\n}\"]\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}