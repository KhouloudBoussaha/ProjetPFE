{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../group.service\";\nimport * as i2 from \"../Services/users.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction GroupManagementComponent_tr_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 13)(6, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function GroupManagementComponent_tr_28_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const group_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.selectGroup(group_r2));\n    });\n    i0.ɵɵtext(7, \"\\uD83D\\uDC41\\uFE0F View\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function GroupManagementComponent_tr_28_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const group_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.editGroup(group_r2));\n    });\n    i0.ɵɵtext(9, \"\\u270F\\uFE0F Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function GroupManagementComponent_tr_28_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const group_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deleteGroup(group_r2.id));\n    });\n    i0.ɵɵtext(11, \"\\uD83D\\uDDD1\\uFE0F Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const group_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(group_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(group_r2.members.length);\n  }\n}\nfunction GroupManagementComponent_div_29_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", user_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", user_r9.username, \" (\", user_r9.role, \") \");\n  }\n}\nfunction GroupManagementComponent_div_29_li_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function GroupManagementComponent_div_29_li_17_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const member_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.removeUserFromGroup(member_r10.id));\n    });\n    i0.ɵɵtext(3, \" \\u274C Remove \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const member_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", member_r10.username, \" (\", member_r10.role, \") \");\n  }\n}\nfunction GroupManagementComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"div\", 2)(2, \"h5\", 20);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 6)(5, \"label\", 21);\n    i0.ɵɵtext(6, \"Add a User\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 22)(8, \"select\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function GroupManagementComponent_div_29_Template_select_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.selectedUserId = $event);\n    });\n    i0.ɵɵelementStart(9, \"option\", 24);\n    i0.ɵɵtext(10, \"-- Select a User --\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, GroupManagementComponent_div_29_option_11_Template, 2, 3, \"option\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function GroupManagementComponent_div_29_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.addUserToGroup());\n    });\n    i0.ɵɵtext(13, \" Add \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"h6\");\n    i0.ɵɵtext(15, \"Members\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"ul\", 27);\n    i0.ɵɵtemplate(17, GroupManagementComponent_div_29_li_17_Template, 4, 2, \"li\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function GroupManagementComponent_div_29_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.saveGroupChanges());\n    });\n    i0.ɵɵtext(19, \"\\uD83D\\uDCBE Save Changes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function GroupManagementComponent_div_29_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.deselectGroup());\n    });\n    i0.ɵɵtext(21, \"\\uD83D\\uDD19 Back\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Group: \", ctx_r1.selectedGroup.name, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.selectedUserId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngValue\", null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.users);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.selectedUserId);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.selectedGroup.members);\n  }\n}\nexport class GroupManagementComponent {\n  constructor(groupService, userService) {\n    this.groupService = groupService;\n    this.userService = userService;\n    this.groups = [];\n    this.users = [];\n    this.selectedGroup = null;\n    this.selectedUserId = null;\n    this.newGroupName = '';\n  }\n  ngOnInit() {\n    this.loadGroups();\n    this.loadUsers();\n  }\n  // Charge tous les groupes depuis le backend\n  loadGroups() {\n    this.groupService.getAllGroups().subscribe({\n      next: data => {\n        this.groups = data;\n      },\n      error: err => {\n        console.error('Erreur lors du chargement des groupes', err);\n      }\n    });\n  }\n  // Charge tous les utilisateurs depuis le backend\n  loadUsers() {\n    this.userService.getUsersList().subscribe({\n      next: data => {\n        this.users = data;\n      },\n      error: err => {\n        console.error('Erreur lors du chargement des utilisateurs', err);\n      }\n    });\n  }\n  // Sélectionne un groupe (copie pour éviter effets de bord)\n  selectGroup(group) {\n    this.selectedGroup = JSON.parse(JSON.stringify(group));\n    this.selectedUserId = null;\n  }\n  // Désélectionne le groupe\n  deselectGroup() {\n    this.selectedGroup = null;\n    this.selectedUserId = null;\n  }\n  // Ajoute un utilisateur au groupe sélectionné (localement)\n  addUserToGroup() {\n    if (this.selectedGroup && this.selectedUserId) {\n      const userToAdd = this.users.find(u => u.id === this.selectedUserId);\n      if (userToAdd && !this.selectedGroup.members.some(u => u.id === this.selectedUserId)) {\n        this.selectedGroup.members.push(userToAdd);\n      }\n      this.selectedUserId = null;\n    }\n  }\n  // Retire un utilisateur du groupe sélectionné (localement)\n  removeUserFromGroup(userId) {\n    if (this.selectedGroup) {\n      this.selectedGroup.members = this.selectedGroup.members.filter(u => u.id !== userId);\n    }\n  }\n  // Sauvegarde les modifications du groupe (création ou mise à jour)\n  saveGroupChanges() {\n    if (!this.selectedGroup) return;\n    const groupDto = {\n      id: this.selectedGroup.id,\n      name: this.selectedGroup.name,\n      memberIds: this.selectedGroup.members.map(u => u.id)\n    };\n    if (groupDto.id) {\n      // Mise à jour\n      this.groupService.updateGroup(groupDto).subscribe({\n        next: () => {\n          this.loadGroups();\n          this.deselectGroup();\n        },\n        error: err => console.error('Erreur lors de la mise à jour du groupe', err)\n      });\n    } else {\n      // Création\n      this.groupService.createGroup(groupDto).subscribe({\n        next: () => {\n          this.loadGroups();\n          this.deselectGroup();\n        },\n        error: err => console.error('Erreur lors de la création du groupe', err)\n      });\n    }\n  }\n  // Crée un groupe depuis le champ de saisie\n  createGroup() {\n    if (!this.newGroupName.trim()) return;\n    const groupDto = {\n      name: this.newGroupName.trim(),\n      memberIds: []\n    };\n    this.groupService.createGroup(groupDto).subscribe({\n      next: () => {\n        this.newGroupName = '';\n        this.loadGroups();\n      },\n      error: err => console.error('Erreur lors de la création du groupe', err)\n    });\n  }\n  // Supprime un groupe par son id\n  deleteGroup(groupId) {\n    if (!groupId) return;\n    if (confirm('Are you sure you want to delete this group?')) {\n      this.groupService.deleteGroup(groupId).subscribe({\n        next: () => this.loadGroups(),\n        error: err => console.error('Erreur lors de la suppression du groupe', err)\n      });\n    }\n  }\n  // Edite le nom d’un groupe directement via prompt (optionnel)\n  editGroup(group) {\n    const newName = prompt('Modify group name:', group.name);\n    if (newName && newName.trim() !== '') {\n      group.name = newName.trim();\n      this.saveGroupChanges();\n    }\n  }\n  static {\n    this.ɵfac = function GroupManagementComponent_Factory(t) {\n      return new (t || GroupManagementComponent)(i0.ɵɵdirectiveInject(i1.GroupService), i0.ɵɵdirectiveInject(i2.UsersService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GroupManagementComponent,\n      selectors: [[\"app-group-management\"]],\n      decls: 30,\n      vars: 3,\n      consts: [[1, \"group-management-container\"], [1, \"card\", \"mb-4\"], [1, \"card-body\"], [1, \"card-title\", \"text-danger\", \"text-center\", 2, \"font-weight\", \"bold\", \"font-size\", \"1.5rem\"], [1, \"alert-description\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"groupName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"groupName\", \"name\", \"groupName\", \"required\", \"\", \"placeholder\", \"Enter group name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\"], [1, \"card\"], [1, \"card-title\"], [1, \"table\", \"table-striped\"], [1, \"text-center\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"card mt-4\", 4, \"ngIf\"], [1, \"btn\", \"btn-sm\", \"btn-info\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-warning\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [1, \"card\", \"mt-4\"], [1, \"card-title\", \"text-primary\", \"mb-4\"], [\"for\", \"addUserSelect\", 1, \"form-label\"], [1, \"input-group\"], [\"id\", \"addUserSelect\", \"name\", \"userIdToAdd\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [1, \"list-group\", \"mb-3\"], [\"class\", \"list-group-item d-flex justify-content-between align-items-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-danger\", 3, \"click\"]],\n      template: function GroupManagementComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\", 3);\n          i0.ɵɵtext(4, \" Create a New Group \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\", 4);\n          i0.ɵɵtext(6, \" Organize your users into manageable groups for streamlined collaboration. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function GroupManagementComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.createGroup();\n          });\n          i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n          i0.ɵɵtext(10, \"Group Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 8);\n          i0.ɵɵlistener(\"ngModelChange\", function GroupManagementComponent_Template_input_ngModelChange_11_listener($event) {\n            return ctx.newGroupName = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"button\", 9);\n          i0.ɵɵtext(13, \"Create Group\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(14, \"div\", 10)(15, \"div\", 2)(16, \"h5\", 11);\n          i0.ɵɵtext(17, \"Groups List\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"table\", 12)(19, \"thead\")(20, \"tr\")(21, \"th\");\n          i0.ɵɵtext(22, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"th\");\n          i0.ɵɵtext(24, \"Members\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"th\", 13);\n          i0.ɵɵtext(26, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(27, \"tbody\");\n          i0.ɵɵtemplate(28, GroupManagementComponent_tr_28_Template, 12, 2, \"tr\", 14);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(29, GroupManagementComponent_div_29_Template, 22, 6, \"div\", 15);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngModel\", ctx.newGroupName);\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedGroup && ctx.selectedGroup.id);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n      styles: [\".group-management-container[_ngcontent-%COMP%] {\\n background-color: rgba(255, 255, 255, 0.9);\\n  padding: 0.5rem;\\n  border-radius: 12px;\\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);\\n \\n  \\n\\n  color: black !important;\\n}\\n.alert-title[_ngcontent-%COMP%] {\\n  color: red;\\n  font-size: 2rem;       \\n\\n  font-weight: bold;\\n  text-align: center;\\n  margin-bottom: 0.5rem; \\n\\n}\\n\\n.alert-description[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 1rem;\\n  color: #555;          \\n\\n  margin-top: 0;\\n  font-style: italic;\\n  margin-bottom: 10rem;\\n}\\n\\n.group-list[_ngcontent-%COMP%] {\\n  flex: 1;\\n  border-right: 1px solid #ddd;\\n  padding-right: 1rem;\\n}\\n\\n.group-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding: 0;\\n}\\n\\n.group-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  padding: 0.5rem;\\n  margin-bottom: 0.5rem;\\n  border: 1px solid #eee;\\n  border-radius: 5px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.group-list[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] {\\n  background-color: #f8f8f8;\\n}\\n\\n.group-details[_ngcontent-%COMP%] {\\n  flex: 2;\\n}\\n\\n.add-user[_ngcontent-%COMP%] {\\n  margin-top: 1rem;\\n  display: flex;\\n  gap: 1rem;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\"]\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}