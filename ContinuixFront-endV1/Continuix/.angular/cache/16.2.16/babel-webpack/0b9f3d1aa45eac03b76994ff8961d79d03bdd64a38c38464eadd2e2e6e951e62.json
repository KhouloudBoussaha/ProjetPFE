{"ast":null,"code":"import { IncidentType } from '../incident-type';\nimport { Impact } from '../impact';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../alerte.service\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/common\";\nfunction AdminIncidentListComponent_div_4_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function AdminIncidentListComponent_div_4_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const alerte_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.markAsResolved(alerte_r1));\n    });\n    i0.ɵɵtext(1, \" Marquer comme r\\u00E9solu \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminIncidentListComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"div\", 6)(3, \"span\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 8);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"p\", 9);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 10)(10, \"small\", 11);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"span\", 12);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, AdminIncidentListComponent_div_4_button_14_Template, 2, 0, \"button\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const alerte_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(alerte_r1.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.getImpactBadgeClass(alerte_r1.impact));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", alerte_r1.impact, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(alerte_r1.description);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\uD83D\\uDC64 \", (alerte_r1.createdBy == null ? null : alerte_r1.createdBy.username) || \"Utilisateur inconnu\", \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.getResolvedBadgeClass(alerte_r1.resolved));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", alerte_r1.resolved ? \"R\\u00E9solu\" : \"Non r\\u00E9solu\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !alerte_r1.resolved);\n  }\n}\nexport let AdminIncidentListComponent = /*#__PURE__*/(() => {\n  class AdminIncidentListComponent {\n    constructor(alerteService, authService) {\n      this.alerteService = alerteService;\n      this.authService = authService;\n      this.alertes = [];\n      this.incidentTypes = Object.keys(IncidentType).filter(key => isNaN(+key));\n      this.impact = Object.keys(Impact).filter(key => isNaN(+key));\n    }\n    ngOnInit() {\n      this.loadAlertes();\n    }\n    loadAlertes() {\n      this.alerteService.getAllAlertes().subscribe({\n        next: data => {\n          console.log('Alertes chargées:', data);\n          this.alertes = data;\n        },\n        error: error => {\n          console.error('Erreur chargement alertes:', error);\n        }\n      });\n    }\n    markAsResolved(alerte) {\n      if (!alerte.id) return;\n      this.alerteService.resolveAlerte(alerte.id).subscribe({\n        next: updatedAlerte => {\n          // Mise à jour locale de l'alerte dans la liste\n          const index = this.alertes.findIndex(a => a.id === updatedAlerte.id);\n          if (index !== -1) {\n            this.alertes[index] = updatedAlerte;\n          }\n        },\n        error: err => console.error('Erreur lors du marquage comme résolu', err)\n      });\n    }\n    getResolvedBadgeClass(resolved) {\n      return resolved ? 'badge bg-success' : 'badge bg-danger';\n    }\n    getImpactBadgeClass(impact) {\n      switch (impact) {\n        case 'HIGH':\n          return 'bg-danger';\n        // Rouge pour impact élevé\n        case 'MEDIUM':\n          return 'bg-warning';\n        // Jaune pour impact moyen\n        case 'LOW':\n          return 'bg-success';\n        // Vert pour impact faible\n        default:\n          return 'bg-secondary';\n        // Gris par défaut\n      }\n    }\n\n    static {\n      this.ɵfac = function AdminIncidentListComponent_Factory(t) {\n        return new (t || AdminIncidentListComponent)(i0.ɵɵdirectiveInject(i1.AlerteService), i0.ɵɵdirectiveInject(i2.AuthService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AdminIncidentListComponent,\n        selectors: [[\"app-admin-incident-list\"]],\n        decls: 5,\n        vars: 1,\n        consts: [[1, \"container\", \"mt-5\"], [1, \"mb-4\", \"text-primary\"], [1, \"row\", \"g-4\"], [\"class\", \"col-md-6 col-lg-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-6\", \"col-lg-4\"], [1, \"alert-card\", \"shadow-sm\", \"p-4\", \"rounded-3\", \"bg-white\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-2\"], [1, \"fw-bold\", \"text-dark\"], [1, \"badge\", \"rounded-pill\", 3, \"ngClass\"], [1, \"text-muted\", \"fst-italic\"], [1, \"text-end\", \"mt-3\"], [1, \"text-secondary\"], [3, \"ngClass\"], [\"class\", \"btn btn-sm btn-primary ms-2\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", \"ms-2\", 3, \"click\"]],\n        template: function AdminIncidentListComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n            i0.ɵɵtext(2, \"\\uD83C\\uDF89 Incidents d\\u00E9clar\\u00E9s\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 2);\n            i0.ɵɵtemplate(4, AdminIncidentListComponent_div_4_Template, 15, 8, \"div\", 3);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngForOf\", ctx.alertes);\n          }\n        },\n        dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf],\n        styles: [\".main-content[_ngcontent-%COMP%]{margin-left:0}.alert-title[_ngcontent-%COMP%]{color:red;font-size:2rem;font-weight:700;text-align:center;margin-bottom:.5rem}.alert-description[_ngcontent-%COMP%]{text-align:center;font-size:1rem;color:#555;margin-top:0;font-style:italic;margin-bottom:10rem}.content-inner[_ngcontent-%COMP%]{max-width:100%;overflow:visible;height:auto}.table-container[_ngcontent-%COMP%]{background-color:#ffffffe6;padding:.5rem;border-radius:12px;box-shadow:0 8px 20px #0000004d;color:#000!important}.alert-card[_ngcontent-%COMP%]{background:#fefefe;border-left:6px solid #0d6efd;border-radius:12px;transition:all .3s ease-in-out}.alert-card[_ngcontent-%COMP%]:hover{transform:translateY(-5px);box-shadow:0 8px 16px #00000014}.badge[_ngcontent-%COMP%]{font-size:.75rem;padding:6px 12px}.badge.HIGH[_ngcontent-%COMP%]{background-color:#dc3545;color:#fff}.badge.MEDIUM[_ngcontent-%COMP%]{background-color:#ffc107;color:#000}.badge.LOW[_ngcontent-%COMP%]{background-color:#28a745;color:#fff}\"]\n      });\n    }\n  }\n  return AdminIncidentListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}