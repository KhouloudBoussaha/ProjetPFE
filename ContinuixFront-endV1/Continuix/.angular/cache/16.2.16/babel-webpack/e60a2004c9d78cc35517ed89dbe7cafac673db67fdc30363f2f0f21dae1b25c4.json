{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8075/api/users\";\n  }\n  getHeaders() {\n    const token = localStorage.getItem('token');\n    return new HttpHeaders({\n      Authorization: `Bearer ${token}`\n    });\n  }\n  getUsersList() {\n    return this.httpClient.get(`${this.baseURL}`, {\n      headers: this.getHeaders()\n    });\n  }\n  createUser(employee) {\n    return this.httpClient.post(`${this.baseURL}`, employee, {\n      headers: this.getHeaders()\n    });\n  }\n  getUserById(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`, {\n      headers: this.getHeaders()\n    });\n  }\n  updateUser(id, user) {\n    return this.httpClient.put(`${this.baseURL}/${id}`, user, {\n      headers: this.getHeaders()\n    });\n  }\n  deleteUser(id) {\n    return this.httpClient.delete(`${this.baseURL}/${id}`, {\n      headers: this.getHeaders()\n    });\n  }\n  resetPassword(token, newPassword) {\n    const payload = {\n      token,\n      newPassword\n    };\n    return this.httpClient.post(`${this.baseURL}/reset-password`, payload, {\n      headers: this.getHeaders()\n    });\n  }\n  getUsername() {\n    return localStorage.getItem('username');\n  }\n  // Récupérer tous les groupes d’un utilisateur\n  getUserGroups(userId) {\n    return this.httpClient.get(`${this.baseURL}/groups/user/${userId}`, {\n      headers: this.getHeaders()\n    });\n  }\n  // Ajouter un utilisateur à un groupe\n  addUserToGroup(groupId, userId) {\n    return this.httpClient.post(`${this.baseURL}/groups/${groupId}/add-user/${userId}`, null, {\n      headers: this.getHeaders()\n    });\n  }\n  // Supprimer un utilisateur d’un groupe\n  removeUserFromGroup(groupId, userId) {\n    return this.httpClient.post(`${this.baseURL}/groups/${groupId}/remove-user/${userId}`, null, {\n      headers: this.getHeaders()\n    });\n  }\n  getUserStats() {\n    return this.httpClient.get(`${this.baseURL}/stats`, {\n      headers: this.getHeaders()\n    });\n  }\n  static {\n    this.ɵfac = function UsersService_Factory(t) {\n      return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UsersService,\n      factory: UsersService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}