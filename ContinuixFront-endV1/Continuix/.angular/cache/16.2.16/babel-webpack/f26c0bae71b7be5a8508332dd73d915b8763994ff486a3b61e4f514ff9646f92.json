{"ast":null,"code":"import Swal from 'sweetalert2';\nimport { IncidentType } from '../incident-type';\nimport { Impact } from '../impact';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../notification.service\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction NotificationFormComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r2, \" \");\n  }\n}\nfunction NotificationFormComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const imp_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", imp_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", imp_r3, \" \");\n  }\n}\nexport class NotificationFormComponent {\n  ngOnInit() {\n    console.log('NotificationConsultComponent chargé à 11:11 PM CET, 02/07/2025');\n  }\n  constructor(notificationService, authService) {\n    this.notificationService = notificationService;\n    this.authService = authService;\n    this.title = '';\n    this.message = '';\n    this.incidentType = '';\n    this.impact = '';\n    this.incidentTypes = Object.keys(IncidentType).filter(key => isNaN(Number(key)));\n    this.impacts = Object.keys(Impact).filter(key => isNaN(Number(key)));\n  }\n  submitNotification() {\n    this.notificationService.createNotification(this.title, this.message, this.incidentType, this.impact).subscribe({\n      next: () => {\n        // ✅ Popup de succès\n        Swal.fire({\n          icon: 'success',\n          title: 'Notification envoyée avec succès !',\n          confirmButtonText: 'Ok, super !',\n          confirmButtonColor: '#1BC5BD'\n        });\n        this.title = '';\n        this.message = '';\n        this.incidentType = '';\n        this.impact = '';\n        // Optionnel : reset formulaire après envoi\n      },\n\n      error: error => {\n        console.error('Erreur lors de l’envoi :', error);\n        // ❌ Popup d’erreur\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops !',\n          text: 'Une erreur est survenue lors de l’envoi de la notification.',\n          confirmButtonColor: '#F64E60'\n        });\n      }\n    });\n  }\n  static {\n    this.ɵfac = function NotificationFormComponent_Factory(t) {\n      return new (t || NotificationFormComponent)(i0.ɵɵdirectiveInject(i1.NotificationService), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NotificationFormComponent,\n      selectors: [[\"app-notification-form\"]],\n      decls: 24,\n      vars: 6,\n      consts: [[1, \"form-container\"], [1, \"form-title\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"title\"], [\"id\", \"title\", \"name\", \"title\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"message\"], [\"id\", \"message\", \"name\", \"message\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"incidentType\"], [\"name\", \"incidentType\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"impact\"], [\"name\", \"impact\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-2\"], [3, \"value\"]],\n      template: function NotificationFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Notification Form\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function NotificationFormComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.submitNotification();\n          });\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function NotificationFormComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.title = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 6);\n          i0.ɵɵtext(10, \"Message\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"textarea\", 7);\n          i0.ɵɵlistener(\"ngModelChange\", function NotificationFormComponent_Template_textarea_ngModelChange_11_listener($event) {\n            return ctx.message = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 8);\n          i0.ɵɵtext(14, \"Incident Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"select\", 9);\n          i0.ɵɵlistener(\"ngModelChange\", function NotificationFormComponent_Template_select_ngModelChange_15_listener($event) {\n            return ctx.incidentType = $event;\n          });\n          i0.ɵɵtemplate(16, NotificationFormComponent_option_16_Template, 2, 2, \"option\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 11);\n          i0.ɵɵtext(19, \"Impact\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"select\", 12);\n          i0.ɵɵlistener(\"ngModelChange\", function NotificationFormComponent_Template_select_ngModelChange_20_listener($event) {\n            return ctx.impact = $event;\n          });\n          i0.ɵɵtemplate(21, NotificationFormComponent_option_21_Template, 2, 2, \"option\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"button\", 13);\n          i0.ɵɵtext(23, \"Send\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.title);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.message);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.incidentType);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.incidentTypes);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.impact);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.impacts);\n        }\n      },\n      dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n      styles: [\"\\n\\n.form-container[_ngcontent-%COMP%] {\\n background-color: rgba(255, 255, 255, 0.9); \\n  padding: 0rem;\\n  border-radius: 12px;\\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);\\n  width: 100%;\\n  position: relative;\\n  z-index: 10;\\n  color: black !important;\\n margin-left: 300px;     \\ntop: 50px;\\n}\\n\\n.form-title[_ngcontent-%COMP%] {\\n  font-size: 1.5rem;\\n  font-weight: bold;\\n  margin-bottom: 1.5rem;\\n  text-align: center;\\n  color: #333;\\n}\\n\\n\\n\\n.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  margin-bottom: 0.5rem;\\n  display: block; \\n\\n}\\n\\n\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 1.5rem;\\n}\"]\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}