{"ast":null,"code":"import { IncidentType } from '../incident-type';\nimport { Impact } from '../impact';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../alerte.service\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/common\";\nfunction AdminIncidentListComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"td\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const alerte_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(alerte_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(alerte_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(alerte_r1.type);\n  }\n}\nexport class AdminIncidentListComponent {\n  constructor(alerteService, authService) {\n    this.alerteService = alerteService;\n    this.authService = authService;\n    this.alertes = [];\n    this.incidentTypes = Object.keys(IncidentType).filter(key => isNaN(+key));\n    this.impact = Object.keys(Impact).filter(key => isNaN(+key));\n  }\n  ngOnInit() {\n    this.loadAlertes();\n  }\n  loadAlertes() {\n    this.alerteService.getAllAlertes().subscribe({\n      next: data => {\n        console.log('Alertes chargées:', data);\n        this.alertes = data;\n      },\n      error: error => {\n        console.error('Erreur chargement alertes:', error);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function AdminIncidentListComponent_Factory(t) {\n      return new (t || AdminIncidentListComponent)(i0.ɵɵdirectiveInject(i1.AlerteService), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdminIncidentListComponent,\n      selectors: [[\"app-admin-incident-list\"]],\n      decls: 17,\n      vars: 1,\n      consts: [[1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function AdminIncidentListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h5\", 2);\n          i0.ɵɵtext(3, \"Alerts Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"table\", 3)(5, \"thead\")(6, \"tr\")(7, \"th\");\n          i0.ɵɵtext(8, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"th\");\n          i0.ɵɵtext(10, \"Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"th\");\n          i0.ɵɵtext(12, \"Impact\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"th\");\n          i0.ɵɵtext(14, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"tbody\");\n          i0.ɵɵtemplate(16, AdminIncidentListComponent_tr_16_Template, 8, 3, \"tr\", 4);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"ngForOf\", ctx.alertes);\n        }\n      },\n      dependencies: [i3.NgForOf],\n      styles: [\".main-content[_ngcontent-%COMP%] {\\n  \\n\\n  margin-left: 0;\\n}\\n.alert-title[_ngcontent-%COMP%] {\\n  color: red;\\n  font-size: 2rem;       \\n\\n  font-weight: bold;\\n  text-align: center;\\n  margin-bottom: 0.5rem; \\n\\n}\\n\\n.alert-description[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 1rem;\\n  color: #555;          \\n\\n  margin-top: 0;\\n  font-style: italic;\\n  margin-bottom: 10rem;\\n}\\n\\n.content-inner[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n  overflow: visible;\\n  height: auto;\\n}\\n.table-container[_ngcontent-%COMP%] {\\n background-color: rgba(255, 255, 255, 0.9);\\n  padding: 0.5rem;\\n  border-radius: 12px;\\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);\\n \\n   \\n\\n \\n\\n \\n   \\n\\n \\n  \\n\\n  color: black !important;\\n}\"]\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}