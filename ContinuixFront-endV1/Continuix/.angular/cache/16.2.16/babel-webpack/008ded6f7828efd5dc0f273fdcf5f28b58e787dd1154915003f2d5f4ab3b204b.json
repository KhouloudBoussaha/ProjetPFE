{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../Services/users.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction ListComponent_div_7_tr_17_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"a\", 27);\n    i0.ɵɵlistener(\"click\", function ListComponent_div_7_tr_17_div_17_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const u_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.editUser(u_r3));\n    });\n    i0.ɵɵtext(2, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 28);\n    i0.ɵɵlistener(\"click\", function ListComponent_div_7_tr_17_div_17_Template_a_click_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const u_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.deleteUser(u_r3.id));\n    });\n    i0.ɵɵtext(4, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListComponent_div_7_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"div\", 19);\n    i0.ɵɵelement(3, \"input\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"div\", 20)(6, \"span\", 21);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 22);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\", 23)(15, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function ListComponent_div_7_tr_17_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const u_r3 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.toggleActions(u_r3.id));\n    });\n    i0.ɵɵtext(16, \"Actions \\u2304\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, ListComponent_div_7_tr_17_div_17_Template, 5, 0, \"div\", 25);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const u_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(u_r3.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(u_r3.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.getRoleName(u_r3.role));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(u_r3.supervisor);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", u_r3.id === ctx_r2.openedUserId);\n  }\n}\nfunction ListComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"table\", 9)(3, \"thead\")(4, \"tr\", 10)(5, \"th\", 11)(6, \"div\", 12);\n    i0.ɵɵelement(7, \"input\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"th\", 14);\n    i0.ɵɵtext(9, \"User\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 15);\n    i0.ɵɵtext(11, \"Role\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\", 16);\n    i0.ɵɵtext(13, \"Supervisor ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\", 17);\n    i0.ɵɵtext(15, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"tbody\");\n    i0.ɵɵtemplate(17, ListComponent_div_7_tr_17_Template, 18, 5, \"tr\", 18);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.user);\n  }\n}\nfunction ListComponent_div_8_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41);\n    i0.ɵɵelement(1, \"input\", 42);\n    i0.ɵɵelementStart(2, \"label\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const r_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", \"role_\" + r_r13.id)(\"value\", r_r13.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", \"role_\" + r_r13.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(r_r13.name);\n  }\n}\nfunction ListComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"h2\", 29);\n    i0.ɵɵtext(2, \"Add User\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 30);\n    i0.ɵɵlistener(\"ngSubmit\", function ListComponent_div_8_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onSubmit());\n    });\n    i0.ɵɵelementStart(4, \"div\", 31)(5, \"label\", 32);\n    i0.ɵɵtext(6, \"Full Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 31)(9, \"label\", 32);\n    i0.ɵɵtext(10, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 31)(13, \"label\", 32);\n    i0.ɵɵtext(14, \"Supervisor ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 31)(17, \"label\", 32);\n    i0.ɵɵtext(18, \"Role\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 36);\n    i0.ɵɵtemplate(20, ListComponent_div_8_div_20_Template, 4, 4, \"div\", 37);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"div\", 38)(22, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function ListComponent_div_8_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      ctx_r16.showForm = false;\n      return i0.ɵɵresetView(ctx_r16.onReset());\n    });\n    i0.ɵɵtext(23, \"Discard\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 40);\n    i0.ɵɵtext(25, \"Submit\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.userForm);\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.roles);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.userForm.invalid);\n  }\n}\nexport class ListComponent {\n  constructor(fb, usersService, router) {\n    this.fb = fb;\n    this.usersService = usersService;\n    this.router = router;\n    this.user = [];\n    this.showForm = false;\n    this.openedUserId = null;\n    this.editMode = false;\n    this.editedUser = null;\n    this.roles = [{\n      id: 0,\n      name: 'Admin'\n    }, {\n      id: 1,\n      name: 'MANAGER'\n    }, {\n      id: 2,\n      name: 'SECURITYAGENT'\n    }, {\n      id: 3,\n      name: 'TEAMLEADER'\n    }, {\n      id: 4,\n      name: 'COLLABORATOR'\n    }];\n  }\n  ngOnInit() {\n    this.userForm = this.fb.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      supervisor: ['', Validators.required],\n      role: [0, Validators.required]\n    });\n    this.loadUsers();\n  }\n  loadUsers() {\n    this.usersService.getUsersList().subscribe({\n      next: users => {\n        console.log('Fetched users:', users);\n        this.user = users;\n      },\n      error: error => {\n        console.error('Error fetching users:', error);\n      }\n    });\n  }\n  toggleForm() {\n    this.showForm = !this.showForm;\n  }\n  getRoleName(role) {\n    return role;\n  }\n  getRoleId(roleName) {\n    const role = this.roles.find(r => r.name.toLowerCase() === roleName.toLowerCase());\n    return role ? role.id : 0;\n  }\n  onSubmit() {\n    if (this.userForm.valid) {\n      const userData = this.userForm.value;\n      if (this.editMode && this.editedUser) {\n        // Mise à jour de l'utilisateur\n        this.usersService.updateUser(this.editedUser.id, userData).subscribe({\n          next: response => {\n            console.log('User updated successfully:', response);\n            this.loadUsers();\n            Swal.fire({\n              icon: 'success',\n              title: 'User updated successfully!',\n              confirmButtonText: 'OK',\n              confirmButtonColor: '#1BC5BD'\n            }).then(() => {\n              this.showForm = false;\n              this.editMode = false;\n              this.editedUser = null;\n              this.userForm.reset({\n                role: 0\n              });\n            });\n          },\n          error: error => {\n            console.error('Error updating user:', error);\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops!',\n              text: 'Something went wrong while updating the user.'\n            });\n          }\n        });\n      } else {\n        // Création de nouvel utilisateur\n        this.usersService.createUser(userData).subscribe({\n          next: response => {\n            console.log('User created successfully:', response);\n            this.loadUsers();\n            Swal.fire({\n              icon: 'success',\n              title: 'User created successfully!',\n              confirmButtonText: 'OK',\n              confirmButtonColor: '#1BC5BD'\n            }).then(() => {\n              this.showForm = false;\n              this.userForm.reset({\n                role: 0\n              });\n            });\n          },\n          error: error => {\n            console.error('Error creating user:', error);\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops!',\n              text: 'Something went wrong while creating the user.'\n            });\n          }\n        });\n      }\n    } else {\n      console.log('Form invalid');\n    }\n  }\n  onReset() {\n    this.userForm.reset({\n      role: 0\n    });\n  }\n  deleteUser(id) {\n    Swal.fire({\n      icon: 'warning',\n      title: 'Are you sure you want to delete this user?',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete!',\n      cancelButtonText: 'No, cancel',\n      confirmButtonColor: '#F64E60',\n      cancelButtonColor: '#E4E6EF'\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.usersService.deleteUser(id).subscribe({\n          next: () => {\n            console.log('User deleted successfully');\n            this.loadUsers();\n            Swal.fire({\n              icon: 'success',\n              title: 'User has been deleted successfully!',\n              confirmButtonText: 'Ok, got it!',\n              confirmButtonColor: '#1BC5BD'\n            });\n          },\n          error: error => {\n            console.error('Error deleting user:', error);\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops!',\n              text: 'Something went wrong while deleting the user.'\n            });\n          }\n        });\n      }\n    });\n  }\n  toggleActions(userId) {\n    this.openedUserId = this.openedUserId === userId ? null : userId;\n  }\n  editUser(user) {\n    this.editedUser = {\n      ...user\n    };\n    this.editMode = true;\n    this.showForm = true;\n    this.userForm.patchValue({\n      username: user.username,\n      email: user.email,\n      supervisor: user.supervisor,\n      role: this.getRoleId(user.role)\n    });\n  }\n  cancelForm() {\n    Swal.fire({\n      icon: 'warning',\n      title: 'Are you sure you would like to cancel?',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, cancel it!',\n      cancelButtonText: 'No, return',\n      confirmButtonColor: '#1BC5BD',\n      cancelButtonColor: '#E4E6EF'\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.onReset();\n        this.editMode = false;\n        this.editedUser = null;\n        this.showForm = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function ListComponent_Factory(t) {\n      return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UsersService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ListComponent,\n      selectors: [[\"app-list\"]],\n      decls: 9,\n      vars: 2,\n      consts: [[1, \"form-container\"], [1, \"card-header\", \"border-0\", \"pt-6\"], [1, \"card-title\"], [1, \"card-toolbar\"], [1, \"d-flex\", \"justify-content-end\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"card-body py-4\", 4, \"ngIf\"], [1, \"card-body\", \"py-4\"], [1, \"table-container\"], [1, \"table\", \"custom-table\", \"align-middle\", \"fs-6\", \"gy-5\"], [1, \"text-start\", \"text-uppercase\", \"table-header\"], [1, \"w-10px\", \"pe-2\"], [1, \"form-check\", \"form-check-sm\", \"form-check-custom\", \"form-check-solid\", \"me-3\"], [\"type\", \"checkbox\", 1, \"form-check-input\"], [1, \"min-w-150px\"], [1, \"min-w-100px\"], [1, \"min-w-125px\"], [1, \"text-end\", \"min-w-100px\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-check\", \"form-check-sm\", \"form-check-custom\", \"form-check-solid\"], [1, \"d-flex\", \"flex-column\"], [1, \"username\"], [1, \"email\"], [1, \"text-end\", \"position-relative\"], [1, \"action-button\", 3, \"click\"], [\"class\", \"custom-dropdown\", 4, \"ngIf\"], [1, \"custom-dropdown\"], [1, \"dropdown-item\", 3, \"click\"], [1, \"dropdown-item\", \"text-danger\", 3, \"click\"], [1, \"fw-bold\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\", \"fw-semibold\", \"fs-6\", \"required\"], [\"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"username\", 1, \"form-control\", \"form-control-solid\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"example@domain.com\", 1, \"form-control\", \"form-control-solid\"], [\"type\", \"text\", \"formControlName\", \"supervisor\", \"placeholder\", \"supervisor\", 1, \"form-control\", \"form-control-solid\"], [1, \"d-flex\", \"flex-column\", \"gap-3\"], [\"class\", \"form-check\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-center\", \"pt-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-light\", \"me-3\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"form-check\"], [\"type\", \"radio\", \"formControlName\", \"role\", 1, \"form-check-input\", \"me-3\", 3, \"id\", \"value\"], [1, \"form-check-label\", \"fw-bold\", \"text-gray-800\", 3, \"for\"]],\n      template: function ListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵelement(2, \"div\", 2);\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function ListComponent_Template_button_click_5_listener() {\n            return ctx.showForm = true;\n          });\n          i0.ɵɵtext(6, \"Add User\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(7, ListComponent_div_7_Template, 18, 1, \"div\", 6);\n          i0.ɵɵtemplate(8, ListComponent_div_8_Template, 26, 3, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", !ctx.showForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showForm);\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"\\n\\n.table-container[_ngcontent-%COMP%] {\\n  max-height: 400px;\\n  overflow-y: auto;\\n  border: 1px solid #ccc;\\n  border-radius: 8px;\\n  margin-top: 10px;\\n}\\n\\n\\n\\n.custom-table[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-collapse: collapse;\\n}\\n\\n.custom-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n  position: sticky;\\n  top: 0;\\n  background-color: #f1f1f1;\\n  z-index: 2;\\n  border-bottom: 2px solid #000;\\n  padding: 10px;\\n  font-weight: 700;\\n  color: #333;\\n}\\n\\n.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%] {\\n  border-bottom: 1px solid #ddd;\\n  transition: background-color 0.2s ease;\\n}\\n\\n.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover {\\n  background-color: #f9f9f9;\\n}\\n\\n.custom-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  vertical-align: middle;\\n  color: #222;\\n}\\n\\n.avatar[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  object-fit: cover;\\n}\\n\\n.username[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  color: #000;\\n}\\n\\n.status[_ngcontent-%COMP%] {\\n  padding: 2px 8px;\\n  border-radius: 12px;\\n  font-weight: 600;\\n}\\n\\n.status.active[_ngcontent-%COMP%] {\\n  background-color: #d4edda;\\n  color: #155724;\\n}\\n\\n.status.suspended[_ngcontent-%COMP%] {\\n  background-color: #f8d7da;\\n  color: #721c24;\\n}\\n\\n.status.inactive[_ngcontent-%COMP%] {\\n  background-color: #fff3cd;\\n  color: #856404;\\n}\\n\\n.action-button[_ngcontent-%COMP%] {\\n  background: none;\\n  border: none;\\n  color: #007bff;\\n  cursor: pointer;\\n  margin-right: 10px;\\n  font-size: 1rem;\\n}\\n\\n.delete-button[_ngcontent-%COMP%] {\\n  background: none;\\n  border: none;\\n  color: #dc3545;\\n  cursor: pointer;\\n  font-size: 1rem;\\n}\\n\\n.action-button[_ngcontent-%COMP%]:hover, .delete-button[_ngcontent-%COMP%]:hover {\\n  opacity: 0.8;\\n}\\n\\n\\n\\n.form-container[_ngcontent-%COMP%] {\\n  padding: 1.5rem;\\n  border-radius: 12px;\\n  width: 70%;\\n  position: absolute;\\n  bottom: -100px;\\n  margin-left: 300px;\\n  color: black;\\n  z-index: 20;\\n}\\n\\n\\n\\n.card-body[_ngcontent-%COMP%] {\\n  background-color: #ffffff;\\n  border-radius: 12px;\\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);\\n  padding: 2rem;\\n  font-family: 'Fiducia Sans', Arial, sans-serif;\\n}\\n\\n\\n\\n.card-body[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  font-size: 1.5rem;\\n  font-weight: 700;\\n  margin-bottom: 1.5rem;\\n  color: #2e2e2e;\\n}\\n\\n\\n\\n.form-label[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  margin-bottom: 0.5rem;\\n  display: block;\\n  color: #333;\\n}\\n\\n\\n\\n.form-control[_ngcontent-%COMP%] {\\n  width: 70%;\\n  padding: 5px 5px;\\n  border: 1px solid #ccc;\\n  border-radius: 8px;\\n  background-color: #fafafa;\\n  transition: border-color 0.3s;\\n  font-size: 1rem;\\n  font-family: inherit;\\n}\\n\\n.form-control[_ngcontent-%COMP%]:focus {\\n  border-color: #007bff;\\n  outline: none;\\n  background-color: #fff;\\n}\\n\\n\\n\\n.form-check[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.form-check-input[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  width: 18px;\\n  height: 18px;\\n  border-radius: 50%;\\n  border: 2px solid #ccc;\\n  margin-right: 10px;\\n  accent-color: #007bff;\\n}\\n\\n.form-check-label[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n\\n\\n\\n.btn[_ngcontent-%COMP%] {\\n  padding: 0.5rem 1.5rem;\\n  font-size: 1rem;\\n  border-radius: 6px;\\n  font-weight: 600;\\n  transition: all 0.3s ease;\\n  font-family: inherit;\\n}\\n\\n.btn-light[_ngcontent-%COMP%] {\\n  background-color: #f5f5f5;\\n  border: 1px solid #ccc;\\n  color: #333;\\n}\\n\\n.btn-light[_ngcontent-%COMP%]:hover {\\n  background-color: #e2e2e2;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%] {\\n  background-color: #007bff;\\n  border: none;\\n  color: white;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%]:disabled {\\n  background-color: #b3d7ff;\\n  cursor: not-allowed;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%]:hover:not(:disabled) {\\n  background-color: #0056b3;\\n}\\n\\n\\n\\n.mb-3[_ngcontent-%COMP%] {\\n  margin-bottom: 1.5rem;\\n}\\n\\n.text-center[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.required[_ngcontent-%COMP%]::after {\\n  content: \\\" *\\\";\\n  color: red;\\n}\\n\\n\\n\\n@font-face {\\n  font-family: 'Fiducia Sans';\\n  src: local('Fiducia Sans'), url('https://fonts.cdnfonts.com/s/89827/FiduciaSans.woff') format('woff');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n\\nbody[_ngcontent-%COMP%], .form-container[_ngcontent-%COMP%], table[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%] {\\n  font-family: 'Fiducia Sans', Arial, sans-serif;\\n}\"]\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}